services:
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - codeCache

  app:
    container_name: codecache-app
    build: .
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=codecache
      - secret_key=DpHMndfxXbGxsJJhZorDYA3JjcBAfXKo
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - codeCache

  db:
    container_name: codeCache-pg-container
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=codecache
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5444:5432"
    volumes:
      - ./codeCache-pgdata:/var/lib/codeCache-postgresql/data
    networks:
      - codeCache

volumes:
  codeCache-pgdata:

networks:
  codeCache:
    name: codeCache
    driver: bridge
